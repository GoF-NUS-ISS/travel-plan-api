<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.gof.springcloud</groupId>
	<artifactId>microservicecloud</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

   <parent>
       <groupId>org.springframework.boot</groupId>
       <artifactId>spring-boot-starter-parent</artifactId>
       <!-- <version>1.5.22.RELEASE</version> -->
       <version>2.3.2.RELEASE</version>
       <relativePath />
   </parent>
   
	<repositories>
		<repository>
		    <id>jitpack.io</id>
		    <url>https://jitpack.io</url>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<junit.version>4.13</junit.version>
		<log4j.version>1.2.17</log4j.version>
		<lombok.version>1.18.2</lombok.version>
		<!-- unit test coverage -->
		<jacoco.version>0.8.6</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
	</properties>

    <profiles>
        <profile>
            <id>sonar</id>
            <properties>
				<sonar.host.url>https://sonarcloud.io</sonar.host.url>
				<sonar.organization>gof-nus-iss</sonar.organization>
				<sonar.projectKey>GoF-NUS-ISS_travel-plan-api</sonar.projectKey>
                <sonar.moduleKey>${project.groupId}:${project.artifactId}</sonar.moduleKey>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>3.7.0.1746</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sonar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <!-- <version>Dalston.SR1</version> -->
                <version>Hoxton.SR7</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.0.4</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>1.0.31</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>1.3.0</version>
			</dependency>
			
			<dependency>
			    <groupId>ch.qos.logback</groupId>
			    <artifactId>logback-classic</artifactId>
			    <version>1.2.3</version>
			</dependency>
			<dependency>
			    <groupId>ch.qos.logback</groupId>
			    <artifactId>logback-core</artifactId>
			    <version>1.2.3</version>
			</dependency>
			<dependency>
			    <groupId>ch.qos.logback</groupId>
			    <artifactId>logback-access</artifactId>
			    <version>1.2.3</version>
			</dependency>
			<dependency>
			    <groupId>net.logstash.log4j</groupId>
			    <artifactId>jsonevent-layout</artifactId>
			    <version>1.6</version>
			</dependency>
			<dependency>
			    <groupId>net.logstash.logback</groupId>
			    <artifactId>logstash-logback-encoder</artifactId>
			    <version>5.0</version>
			</dependency>
			
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.mockito</groupId>
			    <artifactId>mockito-core</artifactId>
			    <version>3.5.13</version>
			    <scope>test</scope>
			</dependency>
			
			<dependency>
			    <groupId>org.powermock</groupId>
			    <artifactId>powermock-module-junit4</artifactId>
			    <version>2.0.7</version>
			    <scope>test</scope>
			</dependency>
			
			<dependency>
			    <groupId>org.powermock</groupId>
			    <artifactId>powermock-api-mockito2</artifactId>
			    <version>2.0.7</version>
			    <scope>test</scope>
			</dependency>
			
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>springloaded</artifactId>
			    <version>1.2.8.RELEASE</version>
			</dependency>

			<dependency>
			    <groupId>io.springfox</groupId>
			    <artifactId>springfox-boot-starter</artifactId>
			    <version>3.0.0</version>
			</dependency>

		    <dependency>
		        <groupId>org.apache.pulsar</groupId>
		        <artifactId>pulsar-client</artifactId>
		        <version>2.6.1</version>
		    </dependency>
		
		    <dependency>
		        <groupId>org.apache.pulsar</groupId>
		        <artifactId>pulsar-client-admin</artifactId>
		        <version>2.6.1</version>
		    </dependency>

			<dependency>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
			    <version>2.3.4.RELEASE</version>
			</dependency>

			<dependency>
			    <groupId>org.elasticsearch.client</groupId>
			    <artifactId>elasticsearch-rest-high-level-client</artifactId>
			    <version>7.9.1</version>
			</dependency>
	        <dependency>
	            <groupId>org.elasticsearch</groupId>
	            <artifactId>elasticsearch</artifactId>
	            <version>7.9.1</version>
	        </dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>microservicecloud</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<delimiters>
						<delimit>$</delimit>
					</delimiters>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
		    <plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
					    <skip>${maven.test.skip}</skip>
					    <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
					    <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
					    <output>file</output>
					    <append>true</append>
					</configuration>
					<executions>
					  <execution>
					    <id>jacoco-initialize</id>
					    <goals>
					      <goal>prepare-agent</goal>
					    </goals>
					    <phase>test-compile</phase>
					  </execution>
					  <execution>
					    <id>jacoco-site</id>
					    <phase>verify</phase>
					    <goals>
					      <goal>report</goal>
					    </goals>
					  </execution>
					</executions>
				</plugin>

		    </plugins>
		</pluginManagement>
	</build>
    
	<modules>
		<module>microservicecloud-api</module>
		<module>microservicecloud-eureka-7001</module>
		<!--module>microservicecloud-eureka-7002</module>
		<module>microservicecloud-eureka-7003</module-->
		<module>microservicecloud-provider-dept-hystrix-8001</module>
		<module>microservicecloud-provider-dept-hystrix-8002</module>
		<!--module>microservicecloud-provider-dept-8002</module>
		<module>microservicecloud-provider-dept-8003</module-->
		<!--<module>microservicecloud-consumer-dept-feign</module>-->
		<!--<module>microservicecloud-consumer-hystrix-dashboard</module>-->
		<module>microservicecloud-zuul-gateway-9527</module>
	</modules>

</project>

