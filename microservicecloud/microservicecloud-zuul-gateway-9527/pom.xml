
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.gof.springcloud</groupId>
		<artifactId>microservicecloud</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>microservicecloud-zuul-gateway-9527</artifactId>
	<properties>
		<version.number>${git.commit.time}.${git.commit.id.abbrev}</version.number>
	</properties>
	<dependencies>
		<!-- zuul router Gateway -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<!-- actuator monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- hystrix fault-tolerance -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>com.gof.springcloud</groupId>
			<artifactId>microservicecloud-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>springloaded</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
	</dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
			<!--Added by Akash-plugin: git-commit-id-plugin
			Using this plugin to get the commit id and that id can be used
			as tag for our docker images.
			Used recommendation from this link:
			https://phauer.com/2016/version-numbers-continuous-delivery-maven-docker/
			https://dzone.com/articles/maven-git-commit-id-plugin
			-->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.2.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<dateFormat>yyyyMMdd-HHmmss</dateFormat><!--  human-readable part of the version number -->
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.basedir}/git.properties</generateGitPropertiesFilename>
					<format>json</format>
					<injectAllReactorProjects>true</injectAllReactorProjects>
				</configuration>
			</plugin>
			<!--Add by Akash: using this plugin to write version number to a text file
			so that jenkins pipeline can use it-->
			<plugin>
				<groupId>ru.yaal.maven</groupId>
				<artifactId>write-text-files-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<charset>UTF-8</charset>
					<files>
						<file>
							<path>target/version.txt</path>
							<lines>
								<line>${version.number}</line>
							</lines>
						</file>
					</files>
				</configuration>
				<executions>
					<execution>
						<id>write-text-files</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>write-text-files</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <from>
                        <image>java:8</image>
                    </from>
                    <to>
                        <image>docker.io/gofnusiss/travel-plan-zuul-api:${version.number}</image>
                        <auth>
                            <username>236924</username>
                            <password>5201314sunshun</password>
                        </auth>
                    </to>
                    <container>
                        <jvmFlags>
                            <jvmFlag>-Xms256mb</jvmFlag>
                            <jvmFlag>-Xmx512mb</jvmFlag>
                        </jvmFlags>
                        <ports>
                            <port>9527</port>
                        </ports>
                    </container>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>
            </plugin>
            
            
            <!-- 
			<plugin>
			  <groupId>com.spotify</groupId>
			  <artifactId>dockerfile-maven-plugin</artifactId>
			  <version>1.4.13</version>
			  <executions>
			    <execution>
			      <id>default</id>
			      <goals>
			        <goal>build</goal>
			        <goal>push</goal>
			      </goals>
			    </execution>
			  </executions>
			  <configuration>
			    <repository>gofnusiss/travel-plan-zuul-api</repository>
			    <tag>latest</tag>
				<username>236924</username>
				<password>5201314sunshun</password>
			    <buildArgs>
			      <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
			    </buildArgs>
			  </configuration>
			</plugin>
			 -->
			 
        </plugins>
    </build>
</project>

